function func_str = editCCode( name , ccode_str , dim , vars , qf , func_count )

output = [ ...
	'#include <iostream>' newline ...
	'// #include <armadillo>' newline ...
	'#include <C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\armadillo>' newline ...
	'#include <math.h>' newline ...
	'#include "mex.h"' newline ...
	newline ...
	'using namespace std ;' newline ...
	'using namespace arma ;' newline ...
	newline ...
	'mat ' name '( double *var , double *q )' newline ...
	'{' newline ...
	'	mat A0 = zeros<mat>(' num2str( dim(1) ) ',' num2str( dim(2) ) ') ;' newline ...
	newline ] ;
for i = 1 : numel( vars )
	output = [ output '	double ' char( vars(i) ) ' = var[' num2str( i ) '] ;' newline ] ;
end
output = [ output newline ] ;
for i = 1 : numel( qf )
	output = [ output '	double q' num2str( i ) ' = q[' num2str( i ) '] ;' newline ] ;
end
output = [ output newline ] ;
ccode_str = strrep( ccode_str , '][' , ',' ) ;
ccode_str = strrep( ccode_str , '[' , '(' ) ;
ccode_str = strrep( ccode_str , ']' , ')' ) ;
output = [ output newline ...
	ccode_str newline ...
	'  return A0 ; ' newline ...
	'  }' ] ;

output_file = fopen( name + '.cpp','wt') ;
fwrite( output_file , output ) ;
fclose ( output_file ) ;

func_str{func_count+1}{1} = name ;
func_str{func_count+1}{2} = [ 'mat ' name '( double * , double * ) ;' ] ;
func_str{func_count+1}{3} = [ 'mat ' name '( var , q ) ;' ] ;



