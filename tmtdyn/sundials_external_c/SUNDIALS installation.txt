Based on SUNDIALS doc>cvode>cv_guide.pdf

Windows:
Download the package from https://computing.llnl.gov/projects/sundials/sundials-software
1. Creat a folder with solverdir, builddir, and instdir subforlders where you want your final installation to be
2. FULLY unzip (2 times) the downloaded tar file(s) into the solverdir folder
3. Open MSBuild Command Prompt for VS2015 as administrator and cd to builddir
    Note: Download and install (followed by restart) "Visual Studio Community 2015 with Update 3" from https://my.visualstudio.com/Downloads?q=visual%20studio%202015&wt.mc_id=o~msft~vscom~older-downloads
    Note: Run VC Express for Windows 10 programm, login to your account, let it configure for the first time, create a new C++ project and let it download all the requirments
4. Run cmake-gui ../solverdir
    Note: Download and install (followed by restart) cmake-gui from: https://cmake.org/download/
(a) Hit Configure
    1st time configure
        Select generator as VS 14 2015
        Select platform ax x64
        Select default native compiler checkbox
        Hit finish
    If needed use Delete Cache from File menu to reconfigure
(b) Check/Uncheck solvers to be built, we need CVODES
(c) Change CMAKE_INSTALL_PREFIX to instdir
(d) Set other options as desired
    Note: Uncheck EXAMPLES_ENABLE_C, EXAMPLES_ENABLE_CXX, EXAMPLES_INSTALL to avoid msbuild error later
(e) Hit Generate
5. Back in the VS Command Window:
(a) Run msbuild ALL_BUILD.vcxproj
(b) Run msbuild INSTALL.vcxproj
6. Copy solverdir>include forder in instdir
    Copy/Override builddir>include folder in instdir
7. In Matlab terminal run "mex -setup" and choose Microsoft Visual C++ 2015 (C) as the preferred C compiler
8. in file sundials_export.h add
#      define SUNDIALS_EXPORT __declspec(dllexport)
    after
#      define SUNDIALS_EXPORT __declspec(dllimport)
    to get
        /* We are using this library */
#      define SUNDIALS_EXPORT __declspec(dllimport)
#      define SUNDIALS_EXPORT __declspec(dllexport)

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Use the following options for compiling 
Windows: (Not working! Requires g++ installation):
g++ -O3 -mtune=native -DNDEBUG -o Demo -I "C:\Program Files\MATLAB\R2019a\extern\include" -IC:\sundials-5.6.1\instdir\include -LC:\sundials-5.6.1\instdir -lsundials_cvode *.c

Matlab mex on windows:
mex -IC:\sundials-5.6.1\instdir\include -LC:\sundials-5.6.1\instdir\lib -lsundials_cvode *.c

Linux:
Use the following options for compiling:
g++ *.c -O3 -mtune=native -DNDEBUG -o Demo -I"/mnt/c/Program Files/MATLAB/R2019a/extern/include" -I/mnt/c/sundials-5.0.0-dev.1/instdir/include -L/mnt/c/sundials-5.0.0-dev.1/instdir/lib -lsundials_cvode -lsundials_nvecserial -lsundials_nvecmanyvector -lm /usr/lib/x86_64-linux-gnu/librt.so -Wl,-rpath,/mnt/c/sundials-5.0.0-dev.1/instdir/lib
