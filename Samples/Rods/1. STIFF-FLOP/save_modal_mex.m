function par = save_modal_mex( par )
fprintf( 'generate modal_mex... \n' )
par.elapsed_time = [ par.elapsed_time toc( par.timer ) ] ;
toc( par.timer )

par_mex = par ;
par_mex.fig = [] ; par.par_mex = [] ;
par_fields = fieldnames( par_mex ) ;
for i = 1 : numel( par_fields )
    if isa( par_mex.(par_fields{i}) , 'matlab.ui.Figure' ) || isa( par_mex.(par_fields{i}) , 'sym' ) || isa( par_mex.(par_fields{i}) , 'VideoWriter' )
        par_mex = rmfield( par_mex , par_fields{i} ) ;
    end
end

string_1 = [
	'function [ TMT , TKT , TVT ] = EOM_modal ( z , par )' newline ...
	'z = [ z 0*z ]'' ;' newline ...
	newline ...
	'par = int_mid_step( par.t_equil_i , z , par ) ;' newline ... % integration mid-step
	newline ...
	'TKT = fj_k_matF( par.var , z.'' ) ; ' newline ... % state stiffness/input
	'TVT = fj_vd_matF( par.var , z.'' ) ;' newline ] ;

string_all = [ string_1 newline ...
    'TMT = zeros(' num2str(par_mex.nq) ',' num2str(par_mex.nq) ') ;' newline ] ;

for i = 1 : par_mex.n_m
    string_all = [ string_all newline ...
        's0 = 1e-6 ;' newline ...
        'ds = par.rom.mass(' num2str(i) ') / par.n_int ;' newline ...
        'if par.rom.mass(' num2str(i) ') == 0 ; ds = 1 ; s0 = 0 ; end' newline ...
        'for s = s0 : ds : par.rom.mass(' num2str(i) ') - s0' newline ...
        '    [ M , T ] = massF' num2str(i) '( par.var , z.'' , s ) ;' newline ...
        '    TMT = TMT + T.'' * M * T * ds ;' newline ...
        'end' newline ] ;
end

for i = par_mex.nq + 1 : par_mex.n_sd
    string_all = [ string_all newline ...
        's0 = 1e-6 ;' newline ...
        'ds = par.rom.sprdmp(' num2str(i) ') / par.n_int ;' newline ...
        'if par.rom.sprdmp(' num2str(i) ') == 0 ; ds = 1 ; s0 = 0 ; end' newline ...
        'for s = s0 : ds : par.rom.sprdmp(' num2str(i) ') - s0' newline ...
        '    [ Tt , ~ , ~ , ~ , ~ , k_mat , v_mat ] = sprdmpF' num2str(i) '( par.var , z.'' , s ) ;' newline ...
        '    TKT = TKT + Tt * k_mat * ds ;' newline ...
        '    TVT = TVT + Tt * v_mat * ds ;' newline ...
        'end' newline ] ;
end

%  write m-file
EOM_m = fopen( 'code/EOM_modal.m', 'wt' ) ;
fprintf( EOM_m , string_all ) ;
fclose( EOM_m ) ;
% mex
if par_mex.modal == 2
    vars_mex = { zeros( 1 , ( par_mex.nq + par_mex.nlambda ) ) , par_mex } ;
    cd code
    codegen EOM_modal -args vars_mex
    cd ..
end

par.par_mex = par_mex ;
fprintf( 'mex file generated. continue... \n' )
par.elapsed_time = [ par.elapsed_time toc( par.timer ) ] ;
toc( par.timer )
